{
  "version": 3,
  "sources": ["../node_modules/es5-ext/global.js", "../node_modules/websocket/lib/version.js", "../node_modules/websocket/lib/browser.js", "../src/index.ts", "../src/BCI2K_OperatorConnection.ts", "../src/BCI2K_DataConnection.ts", "../.temp/temp_index.js"],
  "sourcesContent": ["var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n", "module.exports = require('../package.json').version;\n", "var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n", "export { BCI2K_OperatorConnection } from \"./BCI2K_OperatorConnection\";\nexport { BCI2K_DataConnection } from \"./BCI2K_DataConnection\";\n", "// ======================================================================== //\n//\n// bci2k.js\n// A javascript connector for BCI2000\n//\n// ======================================================================== //\n\nimport { w3cwebsocket as WebSocket } from \"websocket\";\n\nexport class BCI2K_OperatorConnection {\n  msgID: number;\n  websocket: any;\n  state: any;\n  ondisconnect: any;\n  onStateChange: any;\n  address: string;\n  latestIncomingData: string;\n  newData: any;\n  responseBuffer: any;\n  constructor(address?: string) {\n    this.ondisconnect = () => {};\n    this.onStateChange = (event: string) => {};\n    this.websocket = null;\n    this.state = \"\";\n    this.address = address || undefined;\n    this.latestIncomingData = \"\";\n    this.msgID = 0;\n    this.newData = () => {};\n    this.responseBuffer = [];\n  }\n\n  public connect(address?: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this.address === undefined) {\n        this.address =\n          address || \"ws://127.0.0.1:80\" || `ws://${window.location.host}`;\n      }\n\n      this.websocket = new WebSocket(this.address);\n\n      this.websocket.onerror = (error) =>\n        reject(`Error connecting to BCI2000 at ${this.address}`);\n\n      this.websocket.onclose = () => {\n        console.log(\"Connection closed\");\n        this.ondisconnect();\n      };\n      this.websocket.onopen = () => resolve();\n\n      this.websocket.onmessage = (event) => {\n        let { opcode, id, response } = JSON.parse(event.data);\n        switch (opcode) {\n          case \"O\":\n            this.responseBuffer.push({ id: id, response: response });\n            this.newData(response);\n            break;\n          default:\n            break;\n        }\n      };\n    });\n  }\n\n  public disconnect(): void {\n    this.websocket.close();\n  }\n\n  public connected(): boolean {\n    return (\n      this.websocket !== null && this.websocket.readyState === WebSocket.OPEN\n    );\n  }\n\n  public execute(instruction: string): Promise<string> {\n    if (this.connected()) {\n      return new Promise((resolve, reject) => {\n        this.msgID = this.msgID + 1;\n        this.websocket.send(\n          JSON.stringify({\n            opcode: \"E\",\n            id: this.msgID,\n            contents: instruction,\n          })\n        );\n        this.newData = (data) => resolve(data);\n      });\n    }\n    // Cannot execute if not connected\n    return Promise.reject(\n      \"Cannot execute instruction: not connected to BCI2000\"\n    );\n  }\n\n  async getVersion(): Promise<string> {\n    let resp = await this.execute(\"Version\");\n    return resp.split(\"\\r\")[0];\n  }\n\n  async showWindow(): Promise<void> {\n    await this.execute(\"Show Window\");\n  }\n\n  async hideWindow(): Promise<void> {\n    await this.execute(\"Hide Window\");\n  }\n\n  async startExecutable(executable: string): Promise<void> {\n    await this.execute(`Start executable ${executable}`);\n  }\n\n  async startDummyRun(): Promise<void> {\n    // await this.execute('Startup system');\n    await this.startExecutable(\"SignalGenerator\");\n    await this.startExecutable(\"DummySignalProcessing\");\n    await this.startExecutable(\"DummyApplication\");\n    // await this.execute(\"Set Config\");\n    // await this.execute(\"Start\");\n  }\n\n  async setWatch(state: string, ip: string, port: string): Promise<void> {\n    await this.execute(\"Add watch \" + state + \" at \" + ip + \":\" + port);\n  }\n\n  async resetSystem(): Promise<void> {\n    await this.execute(\"Reset System\");\n  }\n\n  async setConfig(): Promise<void> {\n    await this.execute(\"Set Config\");\n  }\n\n  async start(): Promise<void> {\n    await this.execute(\"Start\");\n  }\n\n  async stop(): Promise<void> {\n    await this.execute(\"Stop\");\n  }\n\n  async kill(): Promise<void> {\n    await this.execute(\"Exit\");\n  }\n\n  stateListen(): void {\n    setInterval(async () => {\n      let state: string = await this.execute(\"GET SYSTEM STATE\");\n      if (state.trim() != this.state) {\n        this.onStateChange(state.trim());\n      }\n    }, 1000);\n  }\n\n  async getSubjectName(): Promise<string> {\n    return await this.execute(\"Get Parameter SubjectName\");\n  }\n\n  async getTaskName(): Promise<string> {\n    return await this.execute(\"Get Parameter DataFile\");\n  }\n\n  async setParameter(parameter): Promise<void> {\n    await this.execute(`Set paramater ${parameter}`);\n  }\n\n  async setState(state): Promise<void> {\n    await this.execute(`Set state ${state}`);\n  }\n\n  //See https://www.bci2000.org/mediawiki/index.php/Technical_Reference:Parameter_Definition\n  async getParameters(): Promise<any> {\n    let parameters: any = await this.execute(\"List Parameters\");\n    let allData = parameters.split(\"\\n\");\n    let data = {};\n    let el;\n    allData.forEach((line) => {\n      let descriptors = line.split(\"=\")[0];\n      let dataType = descriptors.split(\" \")[1];\n      let name = descriptors.split(\" \")[2];\n      let names = descriptors.split(\" \")[0].split(\":\");\n      names.forEach((x, i) => {\n        switch (i) {\n          case 0: {\n            if (data[names[0]] == undefined) {\n              data[names[0]] = {};\n            }\n            el = data[names[0]];\n            break;\n          }\n          case 1: {\n            if (data[names[0]][names[1]] == undefined) {\n              data[names[0]][names[1]] = {};\n            }\n            el = data[names[0]][names[1]];\n            break;\n          }\n          case 2: {\n            if (data[names[0]][names[1]][names[2]] == undefined) {\n              data[names[0]][names[1]][names[2]] = {};\n            }\n            el = data[names[0]][names[1]][names[2]];\n            break;\n          }\n          default: {\n          }\n        }\n      });\n\n      if (dataType != \"matrix\") {\n        if (line.split(\"=\")[1].split(\"//\")[0].trim().split(\" \").length == 4) {\n          el[name] = {\n            dataType,\n            value: {\n              value: line.split(\"=\")[1].split(\"//\")[0].trim().split(\" \")[0],\n              defaultValue: line\n                .split(\"=\")[1]\n                .split(\"//\")[0]\n                .trim()\n                .split(\" \")[1],\n              low: line.split(\"=\")[1].split(\"//\")[0].trim().split(\" \")[2],\n              high: line.split(\"=\")[1].split(\"//\")[0].trim().split(\" \")[3],\n            },\n            comment: line.split(\"=\")[1].split(\"//\")[1],\n          };\n        } else {\n          el[name] = {\n            dataType,\n            value: line.split(\"=\")[1].split(\"//\")[0].trim(),\n            comment: line.split(\"=\")[1].split(\"//\")[1],\n          };\n        }\n      } else {\n        el[name] = {\n          dataType,\n          value: line.split(\"=\")[1].split(\"//\")[0].trim(),\n          comment: line.split(\"=\")[1].split(\"//\")[1],\n        };\n      }\n    });\n\n    return data;\n  }\n}\n", "import { w3cwebsocket as WebSocket } from \"websocket\";\n\nexport class BCI2K_DataConnection {\n  _socket: any;\n  states: any;\n  signal: any;\n  signalProperties: any;\n  stateFormat: any;\n  stateVecOrder: any;\n  SignalType: any;\n  callingFrom: any;\n  onconnect: any;\n  onGenericSignal: any;\n  onStateVector: any;\n  onSignalProperties: any;\n  onStateFormat: any;\n  ondisconnect: any;\n  onReceiveBlock: any;\n  address: string;\n  constructor(address?: string) {\n    this._socket = null;\n    this.onconnect = () => {};\n    this.onGenericSignal = (data: any) => {};\n    this.onStateVector = (data: any) => {};\n    this.onSignalProperties = (data: any) => {};\n    this.onStateFormat = (data: any) => {};\n    this.ondisconnect = () => {};\n    this.onReceiveBlock = () => {};\n    this.callingFrom = \"\";\n    this.states = {};\n    this.signal = null;\n    this.signalProperties = null;\n    this.stateFormat = null;\n    this.stateVecOrder = null;\n    this.SignalType = {\n      INT16: 0,\n      FLOAT24: 1,\n      FLOAT32: 2,\n      INT32: 3,\n    };\n    this.address = address!;\n  }\n  private getNullTermString(dv: DataView) {\n    var val = \"\";\n    let count = 0;\n    while (count < dv.byteLength) {\n      var v = dv.getUint8(count);\n      count++;\n      if (v == 0) break;\n      val += String.fromCharCode(v);\n    }\n    return val;\n  }\n  connect(address?: string, callingFrom?: string) {\n    let connection = this;\n    if (connection.address === undefined) connection.address = address!;\n    this.callingFrom = callingFrom;\n    return new Promise<void>((resolve, reject) => {\n      connection._socket = new WebSocket(connection.address);\n      connection._socket.binaryType = \"arraybuffer\";\n      connection._socket.onerror = () => {\n        // This will only execute if we err before connecting, since\n        // Promises can only get triggered once\n        reject(\"Error connecting to data source at \" + connection.address);\n      };\n      connection._socket.onopen = () => {\n        connection.onconnect();\n        resolve();\n      };\n      connection._socket.onclose = () => {\n        connection.ondisconnect();\n        setTimeout(() => {\n          console.log(\"Disconnected\");\n          this.connect(\"\");\n        }, 1000);\n      };\n      connection._socket.onmessage = (event: { data: ArrayBuffer }) => {\n        connection._decodeMessage(event.data);\n      };\n    });\n  }\n  connected(): boolean {\n    return this._socket != null && this._socket.readyState === WebSocket.OPEN;\n  }\n  private _decodeMessage(data: ArrayBuffer) {\n    let descriptor = new DataView(data, 0, 1).getUint8(0);\n    switch (descriptor) {\n      case 3:\n        let stateFormatView = new DataView(data, 1, data.byteLength - 1);\n        this._decodeStateFormat(stateFormatView);\n        break;\n      case 4:\n        let supplement = new DataView(data, 1, 2).getUint8(0);\n        switch (supplement) {\n          case 1:\n            let genericSignalView = new DataView(data, 2, data.byteLength - 2);\n            this._decodeGenericSignal(genericSignalView);\n            break;\n          case 3:\n            let signalPropertyView = new DataView(data, 2, data.byteLength - 2);\n            this._decodeSignalProperties(signalPropertyView);\n            break;\n          default:\n            console.error(\"Unsupported Supplement: \" + supplement.toString());\n            break;\n        }\n        this.onReceiveBlock();\n        break;\n      case 5:\n        let stateVectorView = new DataView(data, 1, data.byteLength - 1);\n        this._decodeStateVector(stateVectorView);\n        break;\n      default:\n        console.error(\"Unsupported Descriptor: \" + descriptor.toString());\n        break;\n    }\n  }\n  private _decodePhysicalUnits(unitstr: string) {\n    let units: any;\n    units = {};\n    let unit = unitstr.split(\" \");\n    let idx = 0;\n    units.offset = Number(unit[idx++]);\n    units.gain = Number(unit[idx++]);\n    units.symbol = unit[idx++];\n    units.vmin = Number(unit[idx++]);\n    units.vmax = Number(unit[idx++]);\n    return units;\n  }\n  private _decodeSignalProperties(data: DataView) {\n    let propstr = this.getNullTermString(data);\n    // Bugfix: There seems to not always be spaces after '{' characters\n    propstr = propstr.replace(/{/g, \" { \");\n    propstr = propstr.replace(/}/g, \" } \");\n    this.signalProperties = {};\n    let prop_tokens = propstr.split(\" \");\n    let props = [];\n    for (let i = 0; i < prop_tokens.length; i++) {\n      if (prop_tokens[i].trim() === \"\") continue;\n      props.push(prop_tokens[i]);\n    }\n    let pidx = 0;\n    this.signalProperties.name = props[pidx++];\n    this.signalProperties.channels = [];\n    if (props[pidx] === \"{\") {\n      while (props[++pidx] !== \"}\")\n        this.signalProperties.channels.push(props[pidx]);\n      pidx++; // }\n    } else {\n      let numChannels = parseInt(props[pidx++]);\n      for (let i = 0; i < numChannels; i++)\n        this.signalProperties.channels.push((i + 1).toString());\n    }\n    this.signalProperties.elements = [];\n    if (props[pidx] === \"{\") {\n      while (props[++pidx] !== \"}\")\n        this.signalProperties.elements.push(props[pidx]);\n      pidx++; // }\n    } else {\n      let numElements = parseInt(props[pidx++]);\n      for (let i = 0; i < numElements; i++)\n        this.signalProperties.elements.push((i + 1).toString());\n    }\n    // Backward Compatibility\n    this.signalProperties.numelements = this.signalProperties.elements.length;\n    this.signalProperties.signaltype = props[pidx++];\n    this.signalProperties.channelunit = this._decodePhysicalUnits(\n      props.slice(pidx, (pidx += 5)).join(\" \")\n    );\n    this.signalProperties.elementunit = this._decodePhysicalUnits(\n      props.slice(pidx, (pidx += 5)).join(\" \")\n    );\n    pidx++; // '{'\n    this.signalProperties.valueunits = [];\n    for (let i = 0; i < this.signalProperties.channels.length; i++)\n      this.signalProperties.valueunits.push(\n        this._decodePhysicalUnits(props.slice(pidx, (pidx += 5)).join(\" \"))\n      );\n    pidx++; // '}'\n    this.onSignalProperties(this.signalProperties);\n  }\n  private _decodeStateFormat(data: DataView) {\n    this.stateFormat = {};\n    let formatStr = this.getNullTermString(data);\n    let lines = formatStr.split(\"\\n\");\n    for (let lineIdx = 0; lineIdx < lines.length; lineIdx++) {\n      if (lines[lineIdx].trim().length === 0) continue;\n      let stateline = lines[lineIdx].split(\" \");\n      let name = stateline[0];\n      this.stateFormat[name] = {};\n      this.stateFormat[name].bitWidth = parseInt(stateline[1]);\n      this.stateFormat[name].defaultValue = parseInt(stateline[2]);\n      this.stateFormat[name].byteLocation = parseInt(stateline[3]);\n      this.stateFormat[name].bitLocation = parseInt(stateline[4]);\n    }\n    let vecOrder = [];\n    for (let state in this.stateFormat) {\n      let loc = this.stateFormat[state].byteLocation * 8;\n      loc += this.stateFormat[state].bitLocation;\n      vecOrder.push([state, loc]);\n    }\n    // Sort by bit location\n    vecOrder.sort((a, b) => (a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0));\n    // Create a list of ( state, bitwidth ) for decoding state vectors\n    this.stateVecOrder = [];\n    for (let i = 0; i < vecOrder.length; i++) {\n      let state = vecOrder[i][0];\n      this.stateVecOrder.push([state, this.stateFormat[state].bitWidth]);\n    }\n    this.onStateFormat(this.stateFormat);\n  }\n  private _decodeGenericSignal(data: DataView) {\n    let index = 0;\n    let signalType = data.getUint8(index);\n    index = index + 1;\n    let nChannels = data.getUint16(index, true);\n    index = index + 2;\n    let nElements = data.getUint16(index, true);\n    index = index + 2;\n    index = index + data.byteOffset;\n    let signalData = new DataView(data.buffer, index);\n    let signal = [];\n    for (let ch = 0; ch < nChannels; ++ch) {\n      signal.push([]);\n      for (let el = 0; el < nElements; ++el) {\n        switch (signalType) {\n          case this.SignalType.INT16:\n            signal[ch].push(\n              signalData.getInt16((nElements * ch + el) * 2, true)\n            );\n            break;\n          case this.SignalType.FLOAT32:\n            signal[ch].push(\n              signalData.getFloat32((nElements * ch + el) * 4, true)\n            );\n            break;\n          case this.SignalType.INT32:\n            signal[ch].push(\n              signalData.getInt32((nElements * ch + el) * 4, true)\n            );\n            break;\n          case this.SignalType.FLOAT24:\n            // TODO: Currently Unsupported\n            signal[ch].push(0.0);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    this.signal = signal;\n    this.onGenericSignal(signal);\n  }\n  private _decodeStateVector(dv: DataView) {\n    if (this.stateVecOrder == null) return;\n    // Currently, states are maximum 32 bit unsigned integers\n    // BitLocation 0 refers to the least significant bit of a byte in the packet\n    // ByteLocation 0 refers to the first byte in the sequence.\n    // Bits must be populated in increasing significance\n    let i8Array = new Int8Array(dv.buffer);\n    let firstZero = i8Array.indexOf(0);\n    let secondZero = i8Array.indexOf(0, firstZero + 1);\n    let decoder = new TextDecoder();\n    let stateVectorLength = parseInt(\n      decoder.decode(i8Array.slice(1, firstZero))\n    );\n    let numVectors = parseInt(\n      decoder.decode(i8Array.slice(firstZero + 1, secondZero))\n    );\n    let index = secondZero + 1;\n    let data = new DataView(dv.buffer, index);\n    let states = {};\n    for (let state in this.stateFormat) {\n      states[state] = Array(numVectors).fill(\n        this.stateFormat[state].defaultValue\n      );\n    }\n    for (let vecIdx = 0; vecIdx < numVectors; vecIdx++) {\n      let vec = new Uint8Array(\n        data.buffer,\n        data.byteOffset + vecIdx * stateVectorLength,\n        stateVectorLength\n      );\n      let bits = [];\n      for (let byteIdx = 0; byteIdx < vec.length; byteIdx++) {\n        bits.push((vec[byteIdx] & 0x01) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x02) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x04) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x08) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x10) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x20) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x40) !== 0 ? 1 : 0);\n        bits.push((vec[byteIdx] & 0x80) !== 0 ? 1 : 0);\n      }\n      for (let stateIdx = 0; stateIdx < this.stateVecOrder.length; stateIdx++) {\n        let fmt = this.stateFormat[this.stateVecOrder[stateIdx][0]];\n        let offset = fmt.byteLocation * 8 + fmt.bitLocation;\n        let val = 0;\n        let mask = 0x01;\n        for (let bIdx = 0; bIdx < fmt.bitWidth; bIdx++) {\n          if (bits[offset + bIdx]) val = (val | mask) >>> 0;\n          mask = (mask << 1) >>> 0;\n        }\n        states[this.stateVecOrder[stateIdx][0]][vecIdx] = val;\n      }\n    }\n    this.onStateVector(states);\n    this.states = states;\n  }\n}\n", "\n\n      //we can't circularly export a namespace for index.ts so this is the intermediary\n      //import * as bundle from './x' then set globalThis[key] = bundle; The only other option is dynamic importing or a bigger bundler with more of these features built in\n      \n      export * from '../src/index' //still works in esm, getting out of .temp\n      \n      //this takes all of the re-exported modules in index.ts and contains them in an object\n      import * as bundle from '../src/index' // getting out of .temp\n      \n      //webpack? i.e. set the bundled index.ts modules to be globally available? \n      // You can set many modules and assign more functions etc. to the same globals without error\n      \n      //globals are not declared by default in browser scripts, these files are function scopes!\n\n    \n         \n          if(typeof globalThis['bci2k'] !== 'undefined') \n            Object.assign(globalThis['bci2k'],bundle); //we can keep assigning the same namespaces more module objects without error!\n          else \n            globalThis['bci2k'] = bundle;\n        "],
  "mappings": "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",
  "names": []
}
